---
interface Props {
    title: string;
}

const { title } = Astro.props;
import "../../src/scss/custom.scss";
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />

        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
        <script
            is:inline
            src="https://cdn.jsdelivr.net/npm/interactjs/dist/interact.min.js"
        ></script>
    </head>
    <body>
        <slot />
        <script
            is:inline
            src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.0/flowbite.min.js"
        ></script>
        <div
            style="display: none;"
            modal-backdrop=""
            class="bg-gray-900 bg-opacity-50 dark:bg-opacity-80 fixed inset-0 z-40"
        >
        </div>
    </body>
    <script is:inline src="/js/interactDraggable.js"></script>
    <script src="../../public/js/showAndHideModal.js" is:inline></script>
    <script is:inline>
        const modalBackdrop = document.querySelector(".fb-modal-backdrop");

        // Check if the modal backdrop element exists
        if (modalBackdrop) {
            // Set the z-index to a higher value (e.g., 1000)
            modalBackdrop.style.zIndex = "1000";
        }
    </script>
    <script is:inline>
        document.addEventListener("DOMContentLoaded", () => {
            const canvas = document.getElementById("draggable-container");
            let scale = 1;

            function zoom(event, delta) {
                event.preventDefault();
                scale += delta;
                scale = Math.min(Math.max(0.125, scale), 4);
                canvas.style.transform = `scale(${scale})`;
            }

            function handleWheel(event) {
                if (event.ctrlKey) {
                    const delta = event.deltaY > 0 ? -0.1 : 0.1;
                    zoom(event, delta);
                }
            }

            function handleKeyDown(event) {
                if (event.ctrlKey && (event.key === "+" || event.key === "=")) {
                    zoom(event, 0.1);
                } else if (
                    event.ctrlKey &&
                    (event.key === "-" || event.key === "_")
                ) {
                    zoom(event, -0.1);
                }
            }

            canvas.addEventListener("wheel", handleWheel);
            document.addEventListener("keydown", handleKeyDown);
        });
    </script>
    <script is:inline>
        document.addEventListener("DOMContentLoaded", function () {
            const printNormal = document.getElementById("print-normal");
            const printFlipped = document.getElementById("print-flipped");
            const printFold = document.getElementById("print-fold");
            const draggableContainer = document.getElementById(
                "draggable-container"
            );

            if (
                !printNormal ||
                !printFlipped ||
                !printFold ||
                !draggableContainer
            ) {
                console.error("One or more elements not found.");
                return;
            }

            window.addEventListener("beforeprint", function () {
                const clone = draggableContainer.cloneNode(true);
                clone.classList.add("vertical-fold-clone");

                clone.id = "draggable-container-clone";

                if (printFlipped.checked) {
                    draggableContainer.classList.add("rotate-180");
                } else if (printFold.checked) {
                    draggableContainer.classList.add("vertical-fold");
                    draggableContainer.insertAdjacentElement("afterend", clone);
                }
            });

            window.addEventListener("afterprint", function () {
                draggableContainer.classList.remove("rotate-180");
                draggableContainer.classList.remove("vertical-fold");

                const clone = document.getElementById(
                    "draggable-container-clone"
                );
                if (clone) {
                    clone.remove();
                }
            });
        });
    </script>
</html>
