---
interface Props {
    title: string;
}

const { title } = Astro.props;
import "../../src/scss/custom.scss";
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />

        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
        <script
            is:inline
            src="https://cdn.jsdelivr.net/npm/interactjs/dist/interact.min.js"
        ></script>
    </head>
    <body>
        <slot />
        <script
            is:inline
            src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.0/flowbite.min.js"
        ></script>
        <div
            style="display: none;"
            modal-backdrop=""
            class="bg-gray-900 bg-opacity-50 dark:bg-opacity-80 fixed inset-0 z-40"
        >
        </div>
    </body>
    <script is:inline src="/js/interactDraggable.js"></script>
    <script src="../../public/js/showAndHideModal.js" is:inline></script>
    <script is:inline>
        const modalBackdrop = document.querySelector(".fb-modal-backdrop");

        // Check if the modal backdrop element exists
        if (modalBackdrop) {
            // Set the z-index to a higher value (e.g., 1000)
            modalBackdrop.style.zIndex = "1000";
        }
    </script>
    <script is:inline>
        document.addEventListener("DOMContentLoaded", () => {
            const canvas = document.getElementById("draggable-container");
            let scale = 1;

            function zoom(event) {
                event.preventDefault();
                const delta = event.deltaY > 0 ? -0.1 : 0.1;
                scale += delta;
                scale = Math.min(Math.max(0.125, scale), 4);
                canvas.style.transform = `scale(${scale})`;
            }

            document
                .querySelector(".canvas-container")
                .addEventListener("wheel", zoom);
        });
    </script>
</html>
